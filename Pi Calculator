'''
there are many approximations to pi in the form of fractions. 
although not everyone can use a power series representation or a ramanujan
calculation for pi, this program demonstrates how simple for loops in 
python can help determine certain values close to pi
'''

#setting a constant, pi

pi = "3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679"

accuracy = int(input("How accurate would you like this fraction representation of pi to be? (Enter number of digits): "))

number = int(input("""
Please enter the largest value you would 
like to be searched for combinations that result in pi
(note, anything above 1000 will take a very long time 
to search): """))

accuracy_new = accuracy + 1

#using numbers up to 1000, anything more and my PC started to crash

for i in range(1000, 1, -1): #divides all numbers from 1-1000
  for x in range(1, 1000): #by all numbers from 1-1000
    if pi[0:accuracy_new + 1] in str(i/x): #this will search if a person's accuracy for pi exists in these fractions
      print("pi, to {} decimals is approximately equal to {}/{}.".format(accuracy, i, x)) #prints if they do

#thank you for browsing. 
